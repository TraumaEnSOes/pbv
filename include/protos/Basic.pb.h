// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Basic.proto

#ifndef PROTOBUF_INCLUDED_Basic_2eproto
#define PROTOBUF_INCLUDED_Basic_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Basic_2eproto 

namespace protobuf_Basic_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Basic_2eproto
namespace Test {
class Basic;
class BasicDefaultTypeInternal;
extern BasicDefaultTypeInternal _Basic_default_instance_;
class Basic_Inner;
class Basic_InnerDefaultTypeInternal;
extern Basic_InnerDefaultTypeInternal _Basic_Inner_default_instance_;
}  // namespace Test
namespace google {
namespace protobuf {
template<> ::Test::Basic* Arena::CreateMaybeMessage<::Test::Basic>(Arena*);
template<> ::Test::Basic_Inner* Arena::CreateMaybeMessage<::Test::Basic_Inner>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Test {

// ===================================================================

class Basic_Inner : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Test.Basic.Inner) */ {
 public:
  Basic_Inner();
  virtual ~Basic_Inner();

  Basic_Inner(const Basic_Inner& from);

  inline Basic_Inner& operator=(const Basic_Inner& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Basic_Inner(Basic_Inner&& from) noexcept
    : Basic_Inner() {
    *this = ::std::move(from);
  }

  inline Basic_Inner& operator=(Basic_Inner&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Basic_Inner& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Basic_Inner* internal_default_instance() {
    return reinterpret_cast<const Basic_Inner*>(
               &_Basic_Inner_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Basic_Inner* other);
  friend void swap(Basic_Inner& a, Basic_Inner& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Basic_Inner* New() const final {
    return CreateMaybeMessage<Basic_Inner>(NULL);
  }

  Basic_Inner* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Basic_Inner>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Basic_Inner& from);
  void MergeFrom(const Basic_Inner& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Basic_Inner* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 ival = 1;
  void clear_ival();
  static const int kIvalFieldNumber = 1;
  ::google::protobuf::int64 ival() const;
  void set_ival(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:Test.Basic.Inner)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 ival_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Basic_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Basic : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Test.Basic) */ {
 public:
  Basic();
  virtual ~Basic();

  Basic(const Basic& from);

  inline Basic& operator=(const Basic& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Basic(Basic&& from) noexcept
    : Basic() {
    *this = ::std::move(from);
  }

  inline Basic& operator=(Basic&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Basic& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Basic* internal_default_instance() {
    return reinterpret_cast<const Basic*>(
               &_Basic_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Basic* other);
  friend void swap(Basic& a, Basic& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Basic* New() const final {
    return CreateMaybeMessage<Basic>(NULL);
  }

  Basic* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Basic>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Basic& from);
  void MergeFrom(const Basic& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Basic* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Basic_Inner Inner;

  // accessors -------------------------------------------------------

  // repeated .Test.Basic.Inner repeated_inner_message = 3;
  int repeated_inner_message_size() const;
  void clear_repeated_inner_message();
  static const int kRepeatedInnerMessageFieldNumber = 3;
  ::Test::Basic_Inner* mutable_repeated_inner_message(int index);
  ::google::protobuf::RepeatedPtrField< ::Test::Basic_Inner >*
      mutable_repeated_inner_message();
  const ::Test::Basic_Inner& repeated_inner_message(int index) const;
  ::Test::Basic_Inner* add_repeated_inner_message();
  const ::google::protobuf::RepeatedPtrField< ::Test::Basic_Inner >&
      repeated_inner_message() const;

  // string item1 = 1;
  void clear_item1();
  static const int kItem1FieldNumber = 1;
  const ::std::string& item1() const;
  void set_item1(const ::std::string& value);
  #if LANG_CXX11
  void set_item1(::std::string&& value);
  #endif
  void set_item1(const char* value);
  void set_item1(const char* value, size_t size);
  ::std::string* mutable_item1();
  ::std::string* release_item1();
  void set_allocated_item1(::std::string* item1);

  // .Test.Basic.Inner single_inner_message = 4;
  bool has_single_inner_message() const;
  void clear_single_inner_message();
  static const int kSingleInnerMessageFieldNumber = 4;
  private:
  const ::Test::Basic_Inner& _internal_single_inner_message() const;
  public:
  const ::Test::Basic_Inner& single_inner_message() const;
  ::Test::Basic_Inner* release_single_inner_message();
  ::Test::Basic_Inner* mutable_single_inner_message();
  void set_allocated_single_inner_message(::Test::Basic_Inner* single_inner_message);

  // double item3 = 5;
  void clear_item3();
  static const int kItem3FieldNumber = 5;
  double item3() const;
  void set_item3(double value);

  // int32 item2 = 2;
  void clear_item2();
  static const int kItem2FieldNumber = 2;
  ::google::protobuf::int32 item2() const;
  void set_item2(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Test.Basic)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::Test::Basic_Inner > repeated_inner_message_;
  ::google::protobuf::internal::ArenaStringPtr item1_;
  ::Test::Basic_Inner* single_inner_message_;
  double item3_;
  ::google::protobuf::int32 item2_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Basic_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Basic_Inner

// int64 ival = 1;
inline void Basic_Inner::clear_ival() {
  ival_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Basic_Inner::ival() const {
  // @@protoc_insertion_point(field_get:Test.Basic.Inner.ival)
  return ival_;
}
inline void Basic_Inner::set_ival(::google::protobuf::int64 value) {
  
  ival_ = value;
  // @@protoc_insertion_point(field_set:Test.Basic.Inner.ival)
}

// -------------------------------------------------------------------

// Basic

// string item1 = 1;
inline void Basic::clear_item1() {
  item1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Basic::item1() const {
  // @@protoc_insertion_point(field_get:Test.Basic.item1)
  return item1_.GetNoArena();
}
inline void Basic::set_item1(const ::std::string& value) {
  
  item1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Test.Basic.item1)
}
#if LANG_CXX11
inline void Basic::set_item1(::std::string&& value) {
  
  item1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:Test.Basic.item1)
}
#endif
inline void Basic::set_item1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  item1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Test.Basic.item1)
}
inline void Basic::set_item1(const char* value, size_t size) {
  
  item1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Test.Basic.item1)
}
inline ::std::string* Basic::mutable_item1() {
  
  // @@protoc_insertion_point(field_mutable:Test.Basic.item1)
  return item1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Basic::release_item1() {
  // @@protoc_insertion_point(field_release:Test.Basic.item1)
  
  return item1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Basic::set_allocated_item1(::std::string* item1) {
  if (item1 != NULL) {
    
  } else {
    
  }
  item1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item1);
  // @@protoc_insertion_point(field_set_allocated:Test.Basic.item1)
}

// int32 item2 = 2;
inline void Basic::clear_item2() {
  item2_ = 0;
}
inline ::google::protobuf::int32 Basic::item2() const {
  // @@protoc_insertion_point(field_get:Test.Basic.item2)
  return item2_;
}
inline void Basic::set_item2(::google::protobuf::int32 value) {
  
  item2_ = value;
  // @@protoc_insertion_point(field_set:Test.Basic.item2)
}

// repeated .Test.Basic.Inner repeated_inner_message = 3;
inline int Basic::repeated_inner_message_size() const {
  return repeated_inner_message_.size();
}
inline void Basic::clear_repeated_inner_message() {
  repeated_inner_message_.Clear();
}
inline ::Test::Basic_Inner* Basic::mutable_repeated_inner_message(int index) {
  // @@protoc_insertion_point(field_mutable:Test.Basic.repeated_inner_message)
  return repeated_inner_message_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::Test::Basic_Inner >*
Basic::mutable_repeated_inner_message() {
  // @@protoc_insertion_point(field_mutable_list:Test.Basic.repeated_inner_message)
  return &repeated_inner_message_;
}
inline const ::Test::Basic_Inner& Basic::repeated_inner_message(int index) const {
  // @@protoc_insertion_point(field_get:Test.Basic.repeated_inner_message)
  return repeated_inner_message_.Get(index);
}
inline ::Test::Basic_Inner* Basic::add_repeated_inner_message() {
  // @@protoc_insertion_point(field_add:Test.Basic.repeated_inner_message)
  return repeated_inner_message_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Test::Basic_Inner >&
Basic::repeated_inner_message() const {
  // @@protoc_insertion_point(field_list:Test.Basic.repeated_inner_message)
  return repeated_inner_message_;
}

// .Test.Basic.Inner single_inner_message = 4;
inline bool Basic::has_single_inner_message() const {
  return this != internal_default_instance() && single_inner_message_ != NULL;
}
inline void Basic::clear_single_inner_message() {
  if (GetArenaNoVirtual() == NULL && single_inner_message_ != NULL) {
    delete single_inner_message_;
  }
  single_inner_message_ = NULL;
}
inline const ::Test::Basic_Inner& Basic::_internal_single_inner_message() const {
  return *single_inner_message_;
}
inline const ::Test::Basic_Inner& Basic::single_inner_message() const {
  const ::Test::Basic_Inner* p = single_inner_message_;
  // @@protoc_insertion_point(field_get:Test.Basic.single_inner_message)
  return p != NULL ? *p : *reinterpret_cast<const ::Test::Basic_Inner*>(
      &::Test::_Basic_Inner_default_instance_);
}
inline ::Test::Basic_Inner* Basic::release_single_inner_message() {
  // @@protoc_insertion_point(field_release:Test.Basic.single_inner_message)
  
  ::Test::Basic_Inner* temp = single_inner_message_;
  single_inner_message_ = NULL;
  return temp;
}
inline ::Test::Basic_Inner* Basic::mutable_single_inner_message() {
  
  if (single_inner_message_ == NULL) {
    auto* p = CreateMaybeMessage<::Test::Basic_Inner>(GetArenaNoVirtual());
    single_inner_message_ = p;
  }
  // @@protoc_insertion_point(field_mutable:Test.Basic.single_inner_message)
  return single_inner_message_;
}
inline void Basic::set_allocated_single_inner_message(::Test::Basic_Inner* single_inner_message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete single_inner_message_;
  }
  if (single_inner_message) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      single_inner_message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, single_inner_message, submessage_arena);
    }
    
  } else {
    
  }
  single_inner_message_ = single_inner_message;
  // @@protoc_insertion_point(field_set_allocated:Test.Basic.single_inner_message)
}

// double item3 = 5;
inline void Basic::clear_item3() {
  item3_ = 0;
}
inline double Basic::item3() const {
  // @@protoc_insertion_point(field_get:Test.Basic.item3)
  return item3_;
}
inline void Basic::set_item3(double value) {
  
  item3_ = value;
  // @@protoc_insertion_point(field_set:Test.Basic.item3)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Test

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Basic_2eproto
